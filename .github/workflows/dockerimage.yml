name: Docker image build

on:
  push:
#   schedule:
#     - cron:  '0 0 * * *'

jobs:
  build_image:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push image snapshot
        if: steps.releases.outputs.current == steps.releases.outputs.target
        env:
          TARGET_VERSION: dev
          DOCKERHUB_REPOSITORY: ${{ secrets. DOCKERHUB_REPOSITORY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 --build-arg VERSION=$TARGET_VERSION --build-arg VCS_REF=${GITHUB_SHA::7} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKERHUB_REPOSITORY:$TARGET_VERSION .    
      
      - name: Build and push image release
        if: steps.releases.outputs.current != steps.releases.outputs.target
        env:
          TARGET_VERSION: ${{ steps.releases.outputs.target }}
          DOCKERHUB_REPOSITORY: ${{ secrets. DOCKERHUB_REPOSITORY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
          docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 --build-arg VERSION=$TARGET_VERSION --build-arg VCS_REF=${GITHUB_SHA::7} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKERHUB_REPOSITORY:$TARGET_VERSION .
          docker buildx build --push --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 --build-arg VERSION=$TARGET_VERSION --build-arg VCS_REF=${GITHUB_SHA::7} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKERHUB_REPOSITORY:latest .
      
      - name: Update DockerHub Description
        if: steps.releases.outputs.current != steps.releases.outputs.target
        uses: peter-evans/dockerhub-description@v2.0.0
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets. DOCKERHUB_REPOSITORY }}

      - name: Create new Github release
        if: steps.releases.outputs.current != steps.releases.outputs.target
        uses: meeDamian/github-release@1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.releases.outputs.target }}
          name: Update to ${{ steps.releases.outputs.target }}
